{"ast":null,"code":"import _slicedToArray from \"/home/OCTAVIO/Codigos/sistemaHackathon/software2/react-material-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/OCTAVIO/Codigos/sistemaHackathon/software2/react-material-ui/src/componentes/CountDown.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nfunction CountdownTimer() {\n  const calculateTimeLeft = () => {\n    const difference = +new Date(\"2020-01-01\") - +new Date();\n    let timeLeft = {};\n\n    if (difference > 0) {\n      timeLeft = {\n        days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n        hours: Math.floor(difference / (1000 * 60 * 60) % 24),\n        minutes: Math.floor(difference / 1000 / 60 % 60),\n        seconds: Math.floor(difference / 1000 % 60)\n      };\n    }\n\n    return timeLeft;\n  };\n\n  const _useState = useState(calculateTimeLeft()),\n        _useState2 = _slicedToArray(_useState, 2),\n        timeLeft = _useState2[0],\n        setTimeLeft = _useState2[1];\n\n  useEffect(() => {\n    setTimeout(() => {\n      setTimeLeft(calculateTimeLeft());\n    }, 1000);\n  });\n  const timerComponents = [];\n  Object.keys(timeLeft).forEach(interval => {\n    if (!timeLeft[interval]) {\n      return;\n    }\n\n    timerComponents.push(React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, timeLeft[interval], \" \", interval, \" \"));\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Alligator.io New Year's 2020 Countdown\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"With React Hooks!\"), timerComponents.length ? timerComponents : React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Time's up!\"));\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(React.createElement(CountdownTimer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53\n  },\n  __self: this\n}), rootElement);","map":{"version":3,"sources":["/home/OCTAVIO/Codigos/sistemaHackathon/software2/react-material-ui/src/componentes/CountDown.jsx"],"names":["React","useEffect","useState","ReactDOM","CountdownTimer","calculateTimeLeft","difference","Date","timeLeft","days","Math","floor","hours","minutes","seconds","setTimeLeft","setTimeout","timerComponents","Object","keys","forEach","interval","push","length","rootElement","document","getElementById","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,SAASC,cAAT,GAA0B;AACxB,QAAMC,iBAAiB,GAAG,MAAM;AAC9B,UAAMC,UAAU,GAAG,CAAC,IAAIC,IAAJ,CAAS,YAAT,CAAD,GAA0B,CAAC,IAAIA,IAAJ,EAA9C;AACA,QAAIC,QAAQ,GAAG,EAAf;;AAEA,QAAIF,UAAU,GAAG,CAAjB,EAAoB;AAClBE,MAAAA,QAAQ,GAAG;AACTC,QAAAA,IAAI,EAAEC,IAAI,CAACC,KAAL,CAAWL,UAAU,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAArB,CADG;AAETM,QAAAA,KAAK,EAAEF,IAAI,CAACC,KAAL,CAAYL,UAAU,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAX,GAAkC,EAA7C,CAFE;AAGTO,QAAAA,OAAO,EAAEH,IAAI,CAACC,KAAL,CAAYL,UAAU,GAAG,IAAb,GAAoB,EAArB,GAA2B,EAAtC,CAHA;AAITQ,QAAAA,OAAO,EAAEJ,IAAI,CAACC,KAAL,CAAYL,UAAU,GAAG,IAAd,GAAsB,EAAjC;AAJA,OAAX;AAMD;;AAED,WAAOE,QAAP;AACD,GAdD;;AADwB,oBAiBQN,QAAQ,CAACG,iBAAiB,EAAlB,CAjBhB;AAAA;AAAA,QAiBjBG,QAjBiB;AAAA,QAiBPO,WAjBO;;AAmBxBd,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,UAAU,CAAC,MAAM;AACfD,MAAAA,WAAW,CAACV,iBAAiB,EAAlB,CAAX;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GAJQ,CAAT;AAMA,QAAMY,eAAe,GAAG,EAAxB;AAEAC,EAAAA,MAAM,CAACC,IAAP,CAAYX,QAAZ,EAAsBY,OAAtB,CAA8BC,QAAQ,IAAI;AACxC,QAAI,CAACb,QAAQ,CAACa,QAAD,CAAb,EAAyB;AACvB;AACD;;AAEDJ,IAAAA,eAAe,CAACK,IAAhB,CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGd,QAAQ,CAACa,QAAD,CADX,OACwBA,QADxB,EACkC,GADlC,CADF;AAKD,GAVD;AAYA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFF,EAGGJ,eAAe,CAACM,MAAhB,GAAyBN,eAAzB,GAA2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAH9C,CADF;AAOD;;AAED,MAAMO,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;AACAvB,QAAQ,CAACwB,MAAT,CAAgB,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAoCH,WAApC","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nfunction CountdownTimer() {\n  const calculateTimeLeft = () => {\n    const difference = +new Date(\"2020-01-01\") - +new Date();\n    let timeLeft = {};\n\n    if (difference > 0) {\n      timeLeft = {\n        days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n        hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\n        minutes: Math.floor((difference / 1000 / 60) % 60),\n        seconds: Math.floor((difference / 1000) % 60)\n      };\n    }\n\n    return timeLeft;\n  };\n\n  const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\n\n  useEffect(() => {\n    setTimeout(() => {\n      setTimeLeft(calculateTimeLeft());\n    }, 1000);\n  });\n\n  const timerComponents = [];\n\n  Object.keys(timeLeft).forEach(interval => {\n    if (!timeLeft[interval]) {\n      return;\n    }\n\n    timerComponents.push(\n      <span>\n        {timeLeft[interval]} {interval}{\" \"}\n      </span>\n    );\n  });\n\n  return (\n    <div>\n      <h1>Alligator.io New Year's 2020 Countdown</h1>\n      <h2>With React Hooks!</h2>\n      {timerComponents.length ? timerComponents : <span>Time's up!</span>}\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<CountdownTimer />, rootElement);\n"]},"metadata":{},"sourceType":"module"}